#include <iostream>
#include<fstream>
#include<stdlib.h>
#include <climits>
using namespace std;
template<class T>
class merge{
    public:
        T a[1000];
        int count;
        int n;
        void input();
        void display();
        T mergesort(T a[], int p, int r);
        void msort(T a[], int p, int q, int r);
};

template<class T>
void merge<T> :: input(){
    int i;
    cout << "Enter the total number of elements\n";
    cin >> n;
    for(i = 1; i <= n; i++)
    a[i] = rand()%100;
}

template<class T>
void merge<T> ::display(){
    for(int i = 1; i <= n; i++)
    cout << a[i] << " ";
    cout << endl;
}

template<class T>
T merge<T> :: mergesort(T a[], int p, int r){
    if(p<r){
        int q = (p + r - 1) / 2;
        mergesort(a, p, q);
        mergesort(a, q + 1, r);
        msort(a, p, q, r);
    }
    return count;
}

template<class T>
void merge<T> :: msort(T a[], int p, int q, int r){
    int i, j;
    int n1 = q - p + r;
    int n2 = r - p;
    T L[500], R[500];
    for(i = 1;i <= n1; i++)
        L[i] = a[p + i - 1];
    for(j = 1;j <= n2; j++)
        R[j] = a[q + j];
    L[n1 + 1] = INT_MAX;
    R[n2 + 1] = INT_MAX;
    i = j = 1;
    for(int k = p; k <= r; k++){
        if (L[i]<=R[j]){
            a[k]=L[i];
            i++;
        }
        else{
            a[k]=R[j];
            j++;
        }
        count++;
    }
}

int main(){
    ofstream f("MergeSort.csv");
    int c;
    char ch='y';
    while(ch=='y'||ch=='Y'){
        merge<int>m;
        m.input();
        cout << "The elements of the array are :";
        m.display();
        m.count = 0;
        c = m.mergesort(m.a, 1, m.n);
        cout << "\nAfter Sorting: " << endl;
        m.display();
        if(f){
            f << m.n << "," << c;
            f << endl;
        }
        cout << "\nNo.of comparison : " << c;
        cout << "\nDo you want to continue(Y/y)?: ";
        cin >> ch;
    }
    f.close();
    return 0;
 }
